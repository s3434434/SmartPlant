{"version":3,"sources":["hooks/user/user.jsx"],"names":["User","props","Pagination","lazy","getLogin","logOut","wideView","startIndex","window","location","pathname","lastIndexOf","userID","substr","useState","role","setRole","email","phoneNumber","firstName","lastName","detailsForm","setDetailsForm","newPassword","confirmNewPassword","passwordForm","setPasswordForm","emailModifiable","setEmailModifiable","roleModifiable","setRoleModifiable","detailsModifiable","setDetailsModifiable","phoneNumberModifiable","setPhoneNumberModifiable","firstNameModifiable","setFirstNameModifiable","lastNameModifiable","setLastNameModifiable","passwordModifiable","setPasswordModifiable","showEmailStatus","setShowEmailStatus","emailStatus","setEmailStatus","showRoleStatus","setShowRoleStatus","roleStatus","setRoleStatus","showDetailsStatus","setShowDetailsStatus","detailsStatus","setDetailsStatus","showPasswordStatus","setShowPasswordStatus","passwordStatus","setPasswordStatus","showDeleteStatus","setShowDeleteStatus","deleteStatus","setDeleteStatus","plants","setPlants","useEffect","document","title","login","token","admin","axios","get","headers","Authorization","then","res","userData","data","tempDetailsForm","_","cloneDeep","roleFound","forEach","foundUser","id","catch","err","userPlants","plant","push","sort","a","b","nameA","name","nameB","length","handleDetailsChange","e","input","target","value","handleDetailsSubmit","setStatus","setShowStatus","preventDefault","detailsFormData","put","reload","errors","response","errorMessage","undefined","Email","ConfirmEmail","Phone","FirstName","LastName","setTimeout","handlePasswordChange","tempPasswordForm","deleteUser","currentEmail","delete","className","style","color","onClick","onSubmit","htmlFor","type","onChange","tabIndex","icon","faPen","cursor","onKeyPress","required","display","gridTemplateColumns","passwordFormData","description","fallback","items","itemID","heading1","heading2","imageCol","itemTitle1","itemTitle2","path"],"mappings":"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","file":"static/js/32.ff2747cd.chunk.js","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./user.css\";\n\nexport default function User(props) {\n  const Pagination = lazy(() => import(\"../pagination/pagination\"));\n\n  // Constant for the lazy-loaded dynamic import of the Pagination hook. This enables good code-splitting and faster page loading.\n  const { getLogin, logOut, wideView } = props;\n\n  // Constant for the user ID from the URL path.\n  const startIndex = window.location.pathname.lastIndexOf(\"/\") + 1;\n  const userID = window.location.pathname.substr(startIndex);\n\n  // State variables for the user role, user details form and user password form. State variables are also created for whether or not these forms and state variables are currently modifiable, the statuses of their associated requests, and whether these statuses are being shown.\n  // A state variable is also created for the user's plants.\n  const [role, setRole] = useState(\"Loading...\"),\n    [detailsForm, setDetailsForm] = useState({\n      email: \"\",\n      phoneNumber: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    }),\n    [passwordForm, setPasswordForm] = useState({\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n    }),\n    [emailModifiable, setEmailModifiable] = useState(false),\n    [roleModifiable, setRoleModifiable] = useState(false),\n    [detailsModifiable, setDetailsModifiable] = useState(false),\n    [phoneNumberModifiable, setPhoneNumberModifiable] = useState(false),\n    [firstNameModifiable, setFirstNameModifiable] = useState(false),\n    [lastNameModifiable, setLastNameModifiable] = useState(false),\n    [passwordModifiable, setPasswordModifiable] = useState(false),\n    [showEmailStatus, setShowEmailStatus] = useState(false),\n    [emailStatus, setEmailStatus] = useState(\"-\"),\n    [showRoleStatus, setShowRoleStatus] = useState(false),\n    [roleStatus, setRoleStatus] = useState(\"-\"),\n    [showDetailsStatus, setShowDetailsStatus] = useState(false),\n    [detailsStatus, setDetailsStatus] = useState(\"-\"),\n    [showPasswordStatus, setShowPasswordStatus] = useState(false),\n    [passwordStatus, setPasswordStatus] = useState(\"-\"),\n    [showDeleteStatus, setShowDeleteStatus] = useState(false),\n    [deleteStatus, setDeleteStatus] = useState(\"-\"),\n    [plants, setPlants] = useState(\"Loading plants...\");\n\n  // useEffect hook that runs a single time when this component loads. Sets the title of the web page appropriately, then performs a check on whether the user is logged in and an administrator on the UI. If not, the user is returned to the root path.\n  // Otherwise, two GET requests are made - one to the backend individual user admin endpoint and one to the Plants admin endpoint.\n\n  // The GET request to the individual user endpoint proceeds as follows:\n  // If the request is unsuccessful, the user is returned to the root path Otherwise, the response array is iterated through to find a plant with a matching plant ID. If no such plant is found, the user is returned to the root path.\n  // Otherwise, the user details form state variable is updated with the response data. A GET request is then performed to the backend User roles admin endpoint. If this request is unsuccessful, the user is returned to the root path.\n  // Otherwise, the response user roles array is iterated through to find a user with a user ID matching that of user ID in the user details form state variable. If no such user is found, the user is returned to the root path.\n  // Otherwise, the role state variable is updated with the value of the role of the found user.\n\n  // The GET request to the Plants admin endpoint proceeds as follows:\n  // If the request is unsuccessful, the user is returned to the root path.\n  // Otherwise, an empty 'user plants' array is created. The returned plants array is iterated through, and all plants that have a user ID matching that of the user details form state variable are added to the 'user plants' array. The 'user' plants array is then sorted.\n  // Finally, a check is done on whether the 'user plants' array has a length greater than 0. If so, the plants state variable is updated with the value of the 'user plants' array.\n  // Otherwise, the plants state variable is updated with an appropriate message.\n  useEffect(() => {\n    document.title = \"Demeter - The plant meter\";\n\n    const login = getLogin();\n    if (login !== null) {\n      const { token, admin } = login;\n\n      if (admin) {\n        axios\n          .get(\n            `https://smart-plant.azurewebsites.net/api/Admin/User?userID=${userID}`,\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => {\n            const userData = res.data;\n            document.title = `${userData.email} | Demeter - The plant meter`;\n\n            const tempDetailsForm = _.cloneDeep(detailsForm);\n            tempDetailsForm.email = userData.email;\n            tempDetailsForm.phoneNumber = userData.phoneNumber;\n            tempDetailsForm.firstName = userData.firstName;\n            tempDetailsForm.lastName = userData.lastName;\n            setDetailsForm(tempDetailsForm);\n\n            axios\n              .get(\n                \"https://smart-plant.azurewebsites.net/api/Admin/User/Role\",\n                {\n                  headers: {\n                    Authorization: `Bearer ${token}`,\n                  },\n                }\n              )\n              .then((res) => {\n                let roleFound = false;\n                res.data.forEach((foundUser) => {\n                  if (foundUser.id === userID) {\n                    setRole(foundUser.role);\n                    roleFound = true;\n                  }\n                });\n\n                if (!roleFound) {\n                  window.location.pathname = \"/\";\n                }\n              })\n              .catch((err) => {\n                window.location.pathname = \"/\";\n              });\n          })\n          .catch((err) => {\n            window.location.pathname = \"/\";\n          });\n\n        axios\n          .get(\"https://smart-plant.azurewebsites.net/api/Admin/Plants\", {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n          .then((res) => {\n            let userPlants = [];\n            res.data.forEach((plant) => {\n              if (plant.userID === userID) {\n                userPlants.push(plant);\n              }\n            });\n            userPlants = userPlants.sort((a, b) => {\n              const nameA = a.name,\n                nameB = b.name;\n              return nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n            });\n\n            if (userPlants.length > 0) {\n              setPlants(userPlants);\n            } else {\n              setPlants(\"No current plants.\");\n            }\n          })\n          .catch((err) => {\n            window.location.pathname = \"/\";\n          });\n      } else {\n        window.location.pathname = \"/\";\n      }\n    } else {\n      window.location.pathname = \"/\";\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Updates the role state variable whenever the role input field is updated.\n  const handleRoleChange = (e) => {\n    setRole(e.target.value);\n  };\n\n  // Handles the submit event of the role form. The role status is set appropriately, then a check is performed on whether a role has been selected. If not, an appropriate error message is shown.\n  // Otherwise, a second check is performed on whether the user is logged in. If not, an appropriate error message is shown and the user is returned to the root path.\n  // Otherwise, a PUT request is made to the backend update role admin endpoint. If this request is unsuccessful, an appropriate error message is shown. Otherwise, the page is reloaded.\n  const handleRoleSubmit = (e) => {\n    e.preventDefault();\n    setRoleStatus(\"Please wait...\");\n    setShowRoleStatus(true);\n\n    const login = getLogin();\n    if (role !== \"User\" && role !== \"Admin\") {\n      setRoleStatus(\"An appropriate role must be selected.\");\n    } else if (login !== null) {\n      const { token } = login;\n\n      axios\n        .put(\n          \"https://smart-plant.azurewebsites.net/api/Admin/User/Role\",\n          { id: userID, role: role },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        )\n        .then((res) => {\n          window.location.reload();\n        })\n        .catch((err) => {\n          setRoleStatus(\"Server error. Please try again later.\");\n        });\n    } else {\n      setRoleStatus(\"You are not logged in.\");\n      setTimeout(() => {\n        window.location.pathname = \"/\";\n      }, 500);\n    }\n  };\n\n  // Updates the user details form state variable with the appropriate input field whenever a user details form input field is updated.\n  const handleDetailsChange = (e) => {\n    const input = e.target;\n    const tempDetailsForm = _.cloneDeep(detailsForm);\n\n    tempDetailsForm[input.name] = input.value;\n\n    setDetailsForm(tempDetailsForm);\n  };\n\n  // Handles the submit event of the user details form. The user details status is set appropriately, then a check is performed on whether the user is logged in. If not, an appropriate error message is shown and the user is returned to the root path.\n  // Otherwise, a PUT request is made to the backend update user details admin endpoint with the user details form state variable and the user ID from the URL path. If this request is unsuccessful, an appropriate error message is shown. Otherwise, the page is reloaded.\n  const handleDetailsSubmit = (e, setStatus, setShowStatus) => {\n    e.preventDefault();\n    setStatus(\"Please wait...\");\n    setShowStatus(true);\n\n    const login = getLogin();\n    if (login !== null) {\n      const { token } = login;\n      const detailsFormData = _.cloneDeep(detailsForm);\n      detailsFormData.id = userID;\n      axios\n        .put(\n          \"https://smart-plant.azurewebsites.net/api/Admin/User\",\n          detailsFormData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        )\n        .then((res) => {\n          window.location.reload();\n        })\n        .catch((err) => {\n          const errors = err.response.data.errors;\n          let errorMessage = \"Server error. Please try again later.\";\n\n          if (errors.Email !== undefined) {\n            errorMessage = errors.Email[0];\n          } else if (errors.ConfirmEmail !== undefined) {\n            errorMessage = errors.ConfirmEmail[0];\n          } else if (errors.Phone !== undefined) {\n            errorMessage = errors.Phone[0];\n          } else if (errors.FirstName !== undefined) {\n            errorMessage = errors.FirstName[0];\n          } else if (errors.LastName !== undefined) {\n            errorMessage = errors.LastName[0];\n          }\n\n          setStatus(errorMessage);\n        });\n    } else {\n      setStatus(\"You are not logged in.\");\n      setTimeout(() => {\n        window.location.pathname = \"/\";\n      }, 500);\n    }\n  };\n\n  // Updates the password form state variable with the appropriate input field whenever a password form input field is updated.\n  const handlePasswordChange = (e) => {\n    const input = e.target;\n    const tempPasswordForm = _.cloneDeep(passwordForm);\n\n    tempPasswordForm[input.name] = input.value;\n\n    setPasswordForm(tempPasswordForm);\n  };\n\n  // Handles the submit event of the password form. The password form request status is set appropriately, then a check is performed on whether the user is logged in. If not, an appropriate error message is shown and the user is returned to the root path.\n  // Otherwise, a check is performed on whether the form's 'newPassword' and 'confirmNewPassword' fields match. If not, an appropriate error message is shown.\n  // Otherwise, a PUT request is made to the backend change password admin endpoint with the password form state variable and the user ID from the URL path. If this request is successful, an appropriate message is shown and the page is reloaded. Otherwise, an appropriate error message is shown.\n  const handlePasswordSubmit = (e) => {\n    e.preventDefault();\n    setPasswordStatus(\"Please wait...\");\n    setShowPasswordStatus(true);\n\n    const login = getLogin();\n    if (passwordForm.newPassword !== passwordForm.confirmNewPassword) {\n      setPasswordStatus(\"New passwords do not match.\");\n    } else if (login !== null) {\n      const { token } = login;\n      const passwordFormData = _.cloneDeep(passwordForm);\n      passwordFormData.id = userID;\n      axios\n        .put(\n          \"https://smart-plant.azurewebsites.net/api/Admin/User/Password\",\n          passwordFormData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        )\n        .then((res) => {\n          setPasswordStatus(\"Password updated successfully.\");\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n        })\n        .catch((err) => {\n          setPasswordStatus(err.response.data[0].description);\n        });\n    } else {\n      setPasswordStatus(\"You are not logged in.\");\n      setTimeout(() => {\n        window.location.pathname = \"/\";\n      }, 500);\n    }\n  };\n\n  // Attempts to delete the user. The delete user status is set appropriately, then a check is performed on whether the user is logged in. If not, an appropriate error message is shown and the user is returned to the root path.\n  // Otherwise, a DELETE request is made to the backend delete user admin endpoint. If this request is unsuccessful, an appropriate error message is shown.\n  // Otherwise, a check is performed on whether the deleted user has the same user ID as the currently logged in user. If so, the user is logged out on the UI and returned to the root path.\n  // Otherwise, the page is reloaded.\n  const deleteUser = () => {\n    setDeleteStatus(\"Please wait...\");\n    setShowDeleteStatus(true);\n\n    const login = getLogin();\n    if (login !== null) {\n      const { token } = login;\n\n      axios\n        .get(\"https://smart-plant.azurewebsites.net/api/User\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then((res) => {\n          const currentEmail = res.data.email;\n\n          axios\n            .delete(\n              `https://smart-plant.azurewebsites.net/api/Admin/User?userID=${userID}`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              if (currentEmail === detailsForm.email) {\n                logOut();\n                window.location.pathname = \"/\";\n              } else {\n                window.location.reload();\n              }\n            })\n            .catch((err) => {\n              setDeleteStatus(\"Server error. Please try again later.\");\n            });\n        })\n        .catch((err) => {\n          setDeleteStatus(\"Server error. Please try again later.\");\n        });\n    } else {\n      setDeleteStatus(\"You are not logged in.\");\n      setTimeout(() => {\n        window.location.pathname = \"/\";\n      }, 500);\n    }\n  };\n\n  return (\n    <section>\n      {detailsForm.email !== \"\" ? (\n        <>\n          {wideView ? (\n            <div className=\"container m-0 p-0\">\n              <div className=\"row\">\n                <div className=\"col-xl-2 text-center\">\n                  <div className={showDeleteStatus ? \"\" : \"hidden-field\"}>\n                    <span style={{ color: \"white\" }}>{deleteStatus}</span>\n                  </div>\n                  <button className=\"btn btn-primary mt-2\" onClick={deleteUser}>\n                    Delete user\n                  </button>\n                </div>\n                <div className=\"col-xl-10\"></div>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div\n                className={showDeleteStatus ? \"text-center\" : \"hidden-field\"}\n              >\n                <span style={{ color: \"white\" }}>{deleteStatus}</span>\n              </div>\n              <div className=\"text-center\">\n                <button className=\"btn btn-primary mt-2\" onClick={deleteUser}>\n                  Delete user\n                </button>\n              </div>\n            </>\n          )}\n\n          <form\n            className={wideView ? \"m-auto\" : \"m-auto px-2\"}\n            onSubmit={(e) => {\n              handleDetailsSubmit(e, setEmailStatus, setShowEmailStatus);\n            }}\n          >\n            {emailModifiable ? (\n              <div className={wideView ? \"w-25 m-auto\" : \"\"}>\n                <label className=\"form-label gold\" htmlFor=\"email\">\n                  Email\n                </label>\n                <input\n                  className=\"form-control mb-3\"\n                  name=\"email\"\n                  type=\"text\"\n                  value={detailsForm.email}\n                  onChange={handleDetailsChange}\n                />\n              </div>\n            ) : (\n              <>\n                <div className={wideView ? \"w-25 m-auto\" : \"\"}>\n                  <div className=\"text-end m-0 p-0\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setEmailModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setEmailModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n                <h1\n                  className={\n                    wideView\n                      ? \"text-center gold m-0 mb-2 p-0\"\n                      : \"text-center gold m-0 mb-2 p-0 overflow-hidden\"\n                  }\n                >\n                  {detailsForm.email}\n                </h1>\n              </>\n            )}\n            <div\n              className={\n                showEmailStatus\n                  ? \"text-center mt-3\"\n                  : wideView\n                  ? \"hidden-field m-0\"\n                  : \"hidden-field\"\n              }\n            >\n              <span>{emailStatus}</span>\n            </div>\n            <div\n              className={\n                emailModifiable\n                  ? \"text-center my-3\"\n                  : wideView\n                  ? \"hidden-field m-0\"\n                  : \"hidden-field\"\n              }\n            >\n              <button\n                className=\"btn btn-primary\"\n                tabIndex={emailModifiable ? \"0\" : \"-1\"}\n                type=\"submit\"\n              >\n                Apply change\n              </button>\n            </div>\n          </form>\n\n          <form\n            className={wideView ? \"w-25 m-auto mt-4\" : \"m-auto mt-4 px-2\"}\n            onSubmit={handleRoleSubmit}\n          >\n            {roleModifiable ? (\n              <>\n                <label className=\"form-label gold\" htmlFor=\"role\">\n                  Role\n                </label>\n                <select\n                  className=\"form-control\"\n                  name=\"role\"\n                  onChange={handleRoleChange}\n                  required\n                >\n                  <option key=\"default\" value=\"\">\n                    Please select a role\n                  </option>\n                  <option key=\"User\" value=\"User\">\n                    User\n                  </option>\n                  <option key=\"Admin\" value=\"Admin\">\n                    Admin\n                  </option>\n                </select>\n              </>\n            ) : (\n              <>\n                <div\n                  style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}\n                >\n                  <div className=\"text-left\">\n                    <span className=\"gold\">Role</span>\n                  </div>\n                  <div className=\"text-end\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setRoleModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setRoleModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n\n                <div className=\"mt-1 py-1 overflow-hidden gold-border\">\n                  <span className=\"ms-1\">{role}</span>\n                </div>\n              </>\n            )}\n            <div\n              className={showRoleStatus ? \"text-center mt-3\" : \"hidden-field\"}\n            >\n              <span>{roleStatus}</span>\n            </div>\n            <div\n              className={roleModifiable ? \"text-center mt-3\" : \"hidden-field\"}\n            >\n              <button\n                className=\"btn btn-primary\"\n                tabIndex={roleModifiable ? \"0\" : \"-1\"}\n                type=\"submit\"\n              >\n                Apply change\n              </button>\n            </div>\n          </form>\n\n          <form\n            className={wideView ? \"w-25 m-auto mt-4\" : \"m-auto mt-4 px-2\"}\n            onSubmit={(e) => {\n              handleDetailsSubmit(e, setDetailsStatus, setShowDetailsStatus);\n            }}\n          >\n            {phoneNumberModifiable ? (\n              <>\n                <label className=\"form-label gold\" htmlFor=\"phoneNumber\">\n                  Phone\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"phoneNumber\"\n                  type=\"text\"\n                  value={detailsForm.phoneNumber}\n                  onChange={handleDetailsChange}\n                />\n              </>\n            ) : (\n              <>\n                <div\n                  className={wideView ? \"\" : \"mt-2\"}\n                  style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}\n                >\n                  <div className=\"text-left\">\n                    <span className=\"gold\">Phone</span>\n                  </div>\n                  <div className=\"text-end\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setDetailsModifiable(true);\n                        setPhoneNumberModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setDetailsModifiable(true);\n                        setPhoneNumberModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n                <div className=\"mt-1 py-1 overflow-hidden gold-border\">\n                  <span className=\"ms-1\">{detailsForm.phoneNumber}</span>\n                </div>\n              </>\n            )}\n            {firstNameModifiable ? (\n              <>\n                <label className=\"form-label gold mt-2\" htmlFor=\"firstName\">\n                  First name\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={detailsForm.firstName}\n                  onChange={handleDetailsChange}\n                />\n              </>\n            ) : (\n              <>\n                <div\n                  className=\"mt-2\"\n                  style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}\n                >\n                  <div className=\"text-left\">\n                    <span className=\"gold\">First name</span>\n                  </div>\n                  <div className=\"text-end\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setDetailsModifiable(true);\n                        setFirstNameModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setDetailsModifiable(true);\n                        setFirstNameModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n                <div className=\"mt-1 py-1 overflow-hidden gold-border\">\n                  <span className=\"ms-1\">{detailsForm.firstName}</span>\n                </div>\n              </>\n            )}\n            {lastNameModifiable ? (\n              <>\n                <label className=\"form-label gold mt-2\" htmlFor=\"lastName\">\n                  Last name\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={detailsForm.lastName}\n                  onChange={handleDetailsChange}\n                />\n              </>\n            ) : (\n              <>\n                <div\n                  className=\"mt-2\"\n                  style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}\n                >\n                  <div className=\"text-left\">\n                    <span className=\"gold\">Last name</span>\n                  </div>\n                  <div className=\"text-end\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setDetailsModifiable(true);\n                        setLastNameModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setDetailsModifiable(true);\n                        setLastNameModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n                <div className=\"mt-1 py-1 overflow-hidden gold-border\">\n                  <span className=\"ms-1\">{detailsForm.lastName}</span>\n                </div>\n              </>\n            )}\n            <div\n              className={\n                showDetailsStatus ? \"text-center mt-3\" : \"hidden-field\"\n              }\n            >\n              <span>{detailsStatus}</span>\n            </div>\n            <div\n              className={\n                detailsModifiable ? \"text-center mt-3\" : \"hidden-field\"\n              }\n            >\n              <button\n                className=\"btn btn-primary\"\n                tabIndex={detailsModifiable ? \"0\" : \"-1\"}\n                type=\"submit\"\n              >\n                Apply changes\n              </button>\n            </div>\n          </form>\n\n          <form\n            className={wideView ? \"w-25 m-auto mt-4\" : \"m-auto mt-4 px-2\"}\n            onSubmit={handlePasswordSubmit}\n          >\n            {passwordModifiable ? (\n              <>\n                <label className=\"form-label gold mt-2\" htmlFor=\"newPassword\">\n                  New password\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"newPassword\"\n                  type=\"password\"\n                  required\n                  value={passwordForm.newPassword}\n                  onChange={handlePasswordChange}\n                />\n                <label\n                  className=\"form-label gold mt-2\"\n                  htmlFor=\"confirmNewPassword\"\n                >\n                  Confirm new password\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"confirmNewPassword\"\n                  type=\"password\"\n                  required\n                  value={passwordForm.confirmNewPassword}\n                  onChange={handlePasswordChange}\n                />\n              </>\n            ) : (\n              <>\n                <div\n                  className=\"mt-2 p-0\"\n                  style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}\n                >\n                  <div className=\"text-left\">\n                    <span className=\"gold\">Password</span>\n                  </div>\n                  <div className=\"text-end\">\n                    <FontAwesomeIcon\n                      className=\"gold light-gold-hover\"\n                      tabIndex=\"0\"\n                      icon={faPen}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        setPasswordModifiable(true);\n                      }}\n                      onKeyPress={() => {\n                        setPasswordModifiable(true);\n                      }}\n                    ></FontAwesomeIcon>\n                  </div>\n                </div>\n                <div className=\"mt-1 py-1 overflow-hidden gold-border\">\n                  <span className=\"ms-1\">••••••••</span>\n                </div>\n              </>\n            )}\n            <div\n              className={\n                showPasswordStatus ? \"text-center mt-3\" : \"hidden-field\"\n              }\n            >\n              <span>{passwordStatus}</span>\n            </div>\n            <div\n              className={\n                passwordModifiable ? \"text-center mt-3\" : \"hidden-field\"\n              }\n            >\n              <button\n                className=\"btn btn-primary\"\n                tabIndex={passwordModifiable ? \"0\" : \"-1\"}\n                type=\"submit\"\n              >\n                Change password\n              </button>\n            </div>\n          </form>\n\n          <h1 className=\"text-center gold mt-4\">Plants</h1>\n          {typeof plants === \"string\" ? (\n            <div\n              className={\n                wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"\n              }\n              style={{ color: \"white\" }}\n            >\n              {plants}\n            </div>\n          ) : (\n            <Suspense fallback={<div></div>}>\n              <Pagination\n                items={plants}\n                itemID=\"plantID\"\n                heading1=\"Name\"\n                heading2=\"Variety\"\n                imageCol={true}\n                itemTitle1=\"name\"\n                itemTitle2=\"plantType\"\n                path=\"plant-admin\"\n                wideView={wideView}\n              ></Pagination>\n            </Suspense>\n          )}\n        </>\n      ) : (\n        <div\n          className={wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"}\n          style={{ color: \"white\" }}\n        >\n          Loading user...\n        </div>\n      )}\n    </section>\n  );\n}\n"],"sourceRoot":""}