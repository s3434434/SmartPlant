{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Home","lazy","LandingPage","Login","Register","RegistrationSuccessful","ConfirmEmail","ForgotPassword","RequestProcessed","ResetPassword","PasswordResetSuccessful","Logout","Settings","NotFound","AllPlants","AddPlant","PlantAdded","Plant","PrivacyPolicy","TermsOfUse","Support","SupportSuccessful","AllUsers","User","AllPlantsAdmin","PlantAdmin","useState","loggedIn","setLoggedIn","isAdmin","setIsAdmin","window","innerWidth","wideView","setWideView","fullNav","setFullNav","getLogin","loginString","localStorage","getItem","login","parsedLogin","JSON","parse","expiry","Date","now","removeItem","useEffect","admin","addEventListener","logOut","className","id","type","style","display","gridTemplateColumns","src","alt","tabIndex","onClick","location","pathname","onKeyPress","open","fallback","exact","path","element","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5443fb20.chunk.js","sourcesContent":["import React, { lazy, Suspense, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  // Defines constants for the lazy-loaded dynamic imports of the hooks for the app's routes. This enables good code-splitting and faster page loading.\n  const Home = lazy(() => import(\"./hooks/home/home\")),\n    LandingPage = lazy(() => import(\"./hooks/landing_page/landing_page\")),\n    Login = lazy(() => import(\"./hooks/login/login\")),\n    Register = lazy(() => import(\"./hooks/register/register\")),\n    RegistrationSuccessful = lazy(() =>\n      import(\"./hooks/register/registration_successful/registration_successful\")\n    ),\n    ConfirmEmail = lazy(() =>\n      import(\"./hooks/register/confirm_email/confirm_email\")\n    ),\n    ForgotPassword = lazy(() =>\n      import(\"./hooks/forgot_password/forgot_password\")\n    ),\n    RequestProcessed = lazy(() =>\n      import(\"./hooks/forgot_password/request_processed/request_processed\")\n    ),\n    ResetPassword = lazy(() =>\n      import(\"./hooks/forgot_password/reset_password/reset_password\")\n    ),\n    PasswordResetSuccessful = lazy(() =>\n      import(\n        \"./hooks/forgot_password/password_reset_successful/password_reset_successful\"\n      )\n    ),\n    Logout = lazy(() => import(\"./hooks/logout/logout\")),\n    Settings = lazy(() => import(\"./hooks/settings/settings\")),\n    NotFound = lazy(() => import(\"./hooks/not_found/not_found\")),\n    AllPlants = lazy(() => import(\"./hooks/all_plants/all_plants\")),\n    AddPlant = lazy(() => import(\"./hooks/add_plant/add_plant\")),\n    PlantAdded = lazy(() =>\n      import(\"./hooks/add_plant/plant_added/plant_added\")\n    ),\n    Plant = lazy(() => import(\"./hooks/plant/plant\")),\n    PrivacyPolicy = lazy(() => import(\"./hooks/privacy_policy/privacy_policy\")),\n    TermsOfUse = lazy(() => import(\"./hooks/terms_of_use/terms_of_use\")),\n    Support = lazy(() => import(\"./hooks/support/support\")),\n    SupportSuccessful = lazy(() =>\n      import(\"./hooks/support/support_successful/support_successful\")\n    ),\n    AllUsers = lazy(() => import(\"./hooks/all_users/all_users\")),\n    User = lazy(() => import(\"./hooks/user/user\")),\n    AllPlantsAdmin = lazy(() =>\n      import(\"./hooks/all_plants_admin/all_plants_admin\")\n    ),\n    PlantAdmin = lazy(() => import(\"./hooks/plant_admin/plant_admin\"));\n\n  // Constant for the width of a 'wide' screen in pixels, and the width of a screen where the full navbar is showing.\n  const WIDE_SCREEN_PX = 1200,\n    FULL_NAV_PX = 768;\n\n  // State variables for whether the user is logged in, whether the user is an administrator, whether the Browser's window's width is 'wide', and whether the it is a width where the full navbar is showing. These are used to determine whether certain navbar items are shown, whether particular pages are navigated to, and how the responsive UI behaves.\n  const [loggedIn, setLoggedIn] = useState(false),\n    [isAdmin, setIsAdmin] = useState(false),\n    [wideView, setWideView] = useState(window.innerWidth >= WIDE_SCREEN_PX),\n    [fullNav, setFullNav] = useState(window.innerWidth >= FULL_NAV_PX);\n\n  // Attempts to retrieve the login data (JWT, admin status and JWT expiry) stored in localStorage. A check is first performed as to whether the JWT has expired - if so, the login data is removed. If the login data has expired or does not exist, null is returned.\n  const getLogin = () => {\n    const loginString = localStorage.getItem(\"demeter-login\");\n    let login = null;\n\n    if (loginString !== null) {\n      const parsedLogin = JSON.parse(loginString);\n\n      if (parsedLogin.expiry >= Date.now()) {\n        login = parsedLogin;\n      } else {\n        localStorage.removeItem(\"demeter-login\");\n      }\n    }\n\n    return login;\n  };\n\n  // useEffect hook that runs a single time when this component loads. Checks if the user is logged in, then sets the loggedIn and admin state variables appropriately. A window listener is then added to update the wideView and fullNav state variables whenever the window's size is changed, based on whether the window's width is 'wide', and whether window's width is such that the full navbar is showing.\n  useEffect(() => {\n    const login = getLogin();\n    setLoggedIn(login !== null);\n    if (login !== null) {\n      setIsAdmin(login.admin);\n    }\n\n    window.addEventListener(\n      \"resize\",\n      function () {\n        setWideView(window.innerWidth >= WIDE_SCREEN_PX);\n        setFullNav(window.innerWidth >= FULL_NAV_PX);\n      },\n      true\n    );\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Removes the login data from localStorage and appropriately sets the loggedIn state variable when the user logs out.\n  const logOut = () => {\n    if (getLogin() !== null) {\n      localStorage.removeItem(\"demeter-login\");\n      setLoggedIn(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-image\">\n      <nav\n        className={\n          fullNav\n            ? \"navbar navbar-expand-md sticky-top navbar-dark py-0 ps-4 overflow-hidden\"\n            : \"navbar navbar-expand-md sticky-top navbar-dark py-0 overflow-hidden\"\n        }\n        id=\"navbar\"\n      >\n        <button\n          className=\"navbar-toggler ms-2\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#nav-options\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className=\"navbar-brand\"\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: fullNav ? \"50% 50%\" : \"40% 60%\",\n          }}\n        >\n          <img\n            id=\"brand-image\"\n            src=\"https://d3utxwpu6rqzip.cloudfront.net/logo.png\"\n            alt=\"Demeter logo\"\n          ></img>\n          <div\n            id=\"brand-title\"\n            className={fullNav ? \"m-auto ms-0\" : \"m-auto ms-0 me-3\"}\n          >\n            <h1 className=\"gold\">Demeter</h1>\n            <h4 className=\"gold\">The Plant Meter</h4>\n          </div>\n        </div>\n        <div\n          className={\n            fullNav\n              ? \"collapse navbar-collapse justify-content-start align-center ms-4\"\n              : \"collapse navbar-collapse justify-content-start align-center\"\n          }\n          id=\"nav-options\"\n        >\n          <ul className=\"navbar-nav\">\n            {loggedIn ? (\n              <>\n                {isAdmin ? (\n                  <>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/\";\n                        }}\n                      >\n                        <h5>Users</h5>\n                      </span>\n                    </li>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/plants-admin\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/plants-admin\";\n                        }}\n                      >\n                        <h5>Plants</h5>\n                      </span>\n                    </li>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/logout\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/logout\";\n                        }}\n                      >\n                        <h5>Logout</h5>\n                      </span>\n                    </li>\n                  </>\n                ) : (\n                  <>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/\";\n                        }}\n                      >\n                        <h5>Plants</h5>\n                      </span>\n                    </li>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/settings\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/settings\";\n                        }}\n                      >\n                        <h5>Settings</h5>\n                      </span>\n                    </li>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/support\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/support\";\n                        }}\n                      >\n                        <h5>Support</h5>\n                      </span>\n                    </li>\n                    <li className=\"nav-item\">\n                      <span\n                        className=\"nav-link\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          window.location.pathname = \"/logout\";\n                        }}\n                        onKeyPress={() => {\n                          window.location.pathname = \"/logout\";\n                        }}\n                      >\n                        <h5>Logout</h5>\n                      </span>\n                    </li>\n                  </>\n                )}\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      window.location.pathname = \"/\";\n                    }}\n                    onKeyPress={() => {\n                      window.location.pathname = \"/\";\n                    }}\n                  >\n                    <h5>Home</h5>\n                  </span>\n                </li>\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      window.location.pathname = \"/login\";\n                    }}\n                    onKeyPress={() => {\n                      window.location.pathname = \"/login\";\n                    }}\n                  >\n                    <h5>Login</h5>\n                  </span>\n                </li>\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      window.location.pathname = \"/register\";\n                    }}\n                    onKeyPress={() => {\n                      window.location.pathname = \"/register\";\n                    }}\n                  >\n                    <h5>Register</h5>\n                  </span>\n                </li>\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      window.open(\n                        \"mailto:email@example.com?subject=Help%With%Demeter\"\n                      );\n                    }}\n                    onKeyPress={() => {\n                      window.open(\n                        \"mailto:email@example.com?subject=Help%With%Demeter\"\n                      );\n                    }}\n                  >\n                    <h5>Support</h5>\n                  </span>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n      <main>\n        <BrowserRouter>\n          <Suspense fallback={<div></div>}>\n            {\" \"}\n            <Routes>\n              <Route\n                exact\n                path=\"/landing\"\n                element={<LandingPage wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                element={<Login wideView={wideView} logOut={logOut} />}\n              />\n              <Route\n                exact\n                path=\"/register\"\n                element={<Register wideView={wideView} logOut={logOut} />}\n              />\n              <Route\n                exact\n                path=\"/registration-successful\"\n                element={<RegistrationSuccessful wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/confirm-email\"\n                element={<ConfirmEmail logOut={logOut} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/forgot-password\"\n                element={<ForgotPassword logOut={logOut} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/request-processed\"\n                element={<RequestProcessed wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/reset-password\"\n                element={<ResetPassword logOut={logOut} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/password-reset-successful\"\n                element={<PasswordResetSuccessful wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/logout\"\n                element={\n                  <Logout\n                    getLogin={getLogin}\n                    logOut={logOut}\n                    wideView={wideView}\n                  />\n                }\n              />\n              <Route\n                exact\n                path=\"/plants\"\n                element={<AllPlants getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/add-plant\"\n                element={<AddPlant getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/plant-added\"\n                element={<PlantAdded wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/plant/:plant_id\"\n                element={<Plant getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/settings\"\n                element={<Settings getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/support\"\n                element={\n                  <Support\n                    getLogin={getLogin}\n                    logOut={logOut}\n                    wideView={wideView}\n                  />\n                }\n              />\n              <Route\n                exact\n                path=\"/support-successful\"\n                element={<SupportSuccessful wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/privacy-policy\"\n                element={<PrivacyPolicy wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/terms-of-use\"\n                element={<TermsOfUse wideView={wideView} />}\n              />\n              <Route exact path=\"/\" element={<Home getLogin={getLogin} />} />\n              <Route\n                exact\n                path=\"/users\"\n                element={<AllUsers getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                exact\n                path=\"/user/:user_ID\"\n                element={\n                  <User\n                    getLogin={getLogin}\n                    logOut={logOut}\n                    wideView={wideView}\n                  />\n                }\n              />\n              <Route\n                exact\n                path=\"/plants-admin\"\n                element={\n                  <AllPlantsAdmin getLogin={getLogin} wideView={wideView} />\n                }\n              />\n              <Route\n                exact\n                path=\"/plant-admin/:plant_id\"\n                element={<PlantAdmin getLogin={getLogin} wideView={wideView} />}\n              />\n              <Route\n                path=\"/*\"\n                element={<NotFound wideView={wideView} />}\n              ></Route>\n            </Routes>\n          </Suspense>\n        </BrowserRouter>\n      </main>\n      <footer className=\"container-fluid justify-content-center\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 text-center\" style={{ cursor: \"default\" }}>\n            <span>Developed by Team 4, 2021 ©</span>\n          </div>\n          <div className=\"col-sm-4 text-center\">\n            <span\n              className=\"footer-link\"\n              tabIndex=\"0\"\n              onClick={() => {\n                window.location.pathname = \"/terms-of-use\";\n              }}\n              onKeyPress={() => {\n                window.location.pathname = \"/terms-of-use\";\n              }}\n            >\n              Terms of use\n            </span>\n          </div>\n          <div className=\"col-sm-4 text-center\">\n            <span\n              className=\"footer-link\"\n              tabIndex=\"0\"\n              onClick={() => {\n                window.location.pathname = \"/privacy-policy\";\n              }}\n              onKeyPress={() => {\n                window.location.pathname = \"/privacy-policy\";\n              }}\n            >\n              Privacy policy\n            </span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}