{"version":3,"sources":["hooks/login/login.jsx"],"names":["Login","props","logOut","wideView","useState","email","password","form","setForm","showStatus","setShowStatus","status","setStatus","useEffect","document","title","handleChange","e","input","target","tempForm","_","cloneDeep","name","value","className","onSubmit","preventDefault","axios","post","then","res","token","data","get","headers","Authorization","login","JSON","stringify","expiry","Date","now","admin","localStorage","setItem","window","location","pathname","catch","err","errorMessage","errors","response","messages","undefined","htmlFor","type","onChange","required","tabIndex","style","textDecoration","cursor","userSelect","onClick","onKeyPress"],"mappings":"uNAKe,SAASA,EAAMC,GAC5B,IAAQC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,SAGhB,EAAwBC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BN,mBAAS,KAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACRC,SAASC,MAAQ,oCAEjBb,MAEC,IAGH,IAAMc,EAAe,SAACC,GACpB,IAAMC,EAAQD,EAAEE,OACVC,EAAWC,IAAEC,UAAUf,GAC7Ba,EAASF,EAAMK,MAAQL,EAAMM,MAC7BhB,EAAQY,IA+CV,OACE,oCACE,oBAAIK,UAAU,mBAAd,mBACA,uBACEA,UAAWtB,EAAW,mBAAqB,mBAC3CuB,SA/Ce,SAACT,GACpBA,EAAEU,iBACFf,EAAU,kBACVF,GAAc,GAEdkB,IACGC,KAAK,0DAA2DtB,GAChEuB,MAAK,SAACC,GACL,IAAMC,EAAQD,EAAIE,KAClBL,IACGM,IAAI,sDAAuD,CAC1DC,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAG5BF,MAAK,SAACC,GACL,IACMM,EAAQC,KAAKC,UAAU,CAC3BP,MAAOA,EACPQ,OAAQC,KAAKC,MAHG,KAIhBC,MAAoB,UAAbZ,EAAIE,OAGbW,aAAaC,QAAQ,gBAAiBR,GACtCS,OAAOC,SAASC,SAAW,OAE5BC,OAAM,SAACC,GACNtC,EAAU,+CAGfqC,OAAM,SAACC,GACN,IAAIC,EAAe,wCACbC,EAASF,EAAIG,SAASpB,KAAKqB,cAEDC,IAA5BH,EAAO,mBACTD,EAAeC,EAAO,iBAAiB,IAGzCxC,EAAUuC,OAOZ,UAIE,uBAAO1B,UAAU,kBAAkB+B,QAAQ,QAA3C,mBAGA,uBACE/B,UAAU,eACVF,KAAK,QACLkC,KAAK,OACLjC,MAAOjB,EAAKF,MACZqD,SAAU1C,EACV2C,UAAQ,IAEV,uBAAOlC,UAAU,uBAAuB+B,QAAQ,WAAhD,sBAGA,uBACE/B,UAAU,eACVF,KAAK,WACLkC,KAAK,WACLjC,MAAOjB,EAAKD,SACZoD,SAAU1C,EACV2C,UAAQ,IAEV,qBAAKlC,UAAU,iBAAf,SACE,sBACEA,UAAU,wBACVmC,SAAS,IACTC,MAAO,CACLC,eAAgB,OAChBC,OAAQ,UACRC,WAAY,QAEdC,QAAS,WACPnB,OAAOC,SAASC,SAAW,oBAE7BkB,WAAY,WACVpB,OAAOC,SAASC,SAAW,oBAZ/B,gCAkBDvC,EACC,qBAAKgB,UAAU,mBAAf,SACE,+BAAOd,MAGT,qBAAKc,UAAU,oBAAf,SACE,+BAAOd,MAGX,qBACEc,UAAWtB,EAAW,mBAAqB,wBAD7C,SAGE,wBAAQsB,UAAU,kBAAkBgC,KAAK,SAAzC,6B","file":"static/js/20.1de3b36a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./login.css\";\n\nexport default function Login(props) {\n  const { logOut, wideView } = props;\n\n  // State variables for the login form, status of the login request and whether that status is being shown.\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [showStatus, setShowStatus] = useState(false);\n  const [status, setStatus] = useState(\"-\");\n\n  // useEffect hook that runs a single time when this component loads. Sets the title of the web page appropriately.\n  useEffect(() => {\n    document.title = \"Login | Demeter - The plant meter\";\n\n    logOut();\n    // eslint-disable-next-line\n  }, []);\n\n  // Updates the form state variable with the appropriate input field whenever a form input field is updated.\n  const handleChange = (e) => {\n    const input = e.target;\n    const tempForm = _.cloneDeep(form);\n    tempForm[input.name] = input.value;\n    setForm(tempForm);\n  };\n\n  // Handles the submit event of the login form. Sets the request status appropriately, then performs a POST request to the backend login endpoint. If this request is unsuccessful, an appropriate error message is shown.\n  // Otherwise, a second GET request is sent to the backend endpoint responsible for the user's role. If this request is successful, the login data(the JWT, JWT expiry of the current time plus 1 hour, and whether the user is an admin) is added to localStorage and the user is redirected to the root path. Otherwise, an appropriate error message is shown.\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStatus(\"Please wait...\");\n    setShowStatus(true);\n\n    axios\n      .post(\"https://smart-plant.azurewebsites.net/api/Account/Login\", form)\n      .then((res) => {\n        const token = res.data;\n        axios\n          .get(\"https://smart-plant.azurewebsites.net/api/User/Role\", {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n          .then((res) => {\n            const msPerHour = 3600000;\n            const login = JSON.stringify({\n              token: token,\n              expiry: Date.now() + msPerHour,\n              admin: res.data === \"Admin\",\n            });\n\n            localStorage.setItem(\"demeter-login\", login);\n            window.location.pathname = \"/\";\n          })\n          .catch((err) => {\n            setStatus(\"Server error. Please try again later.\");\n          });\n      })\n      .catch((err) => {\n        let errorMessage = \"Server error. Please try again later.\";\n        const errors = err.response.data.messages;\n\n        if (errors[\"Login Details\"] !== undefined) {\n          errorMessage = errors[\"Login Details\"][0];\n        }\n\n        setStatus(errorMessage);\n      });\n  };\n\n  return (\n    <section>\n      <h1 className=\"gold text-center\">Login</h1>\n      <form\n        className={wideView ? \"w-25 m-auto mt-4\" : \"m-auto mt-4 px-2\"}\n        onSubmit={handleSubmit}\n      >\n        <label className=\"form-label gold\" htmlFor=\"email\">\n          Email\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"email\"\n          type=\"text\"\n          value={form.email}\n          onChange={handleChange}\n          required\n        />\n        <label className=\"form-label mt-3 gold\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"password\"\n          type=\"password\"\n          value={form.password}\n          onChange={handleChange}\n          required\n        ></input>\n        <div className=\"form-text mt-2\">\n          <span\n            className=\"gold light-gold-hover\"\n            tabIndex=\"0\"\n            style={{\n              textDecoration: \"none\",\n              cursor: \"pointer\",\n              userSelect: \"none\",\n            }}\n            onClick={() => {\n              window.location.pathname = \"/forgot-password\";\n            }}\n            onKeyPress={() => {\n              window.location.pathname = \"/forgot-password\";\n            }}\n          >\n            Forgot password?\n          </span>\n        </div>\n        {showStatus ? (\n          <div className=\"text-center mt-3\">\n            <span>{status}</span>\n          </div>\n        ) : (\n          <div className=\"hidden-field mt-3\">\n            <span>{status}</span>\n          </div>\n        )}\n        <div\n          className={wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"}\n        >\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Login\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"sourceRoot":""}