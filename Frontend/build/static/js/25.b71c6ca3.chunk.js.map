{"version":3,"sources":["hooks/register/confirm_email/confirm_email.jsx"],"names":["ConfirmEmail","props","logOut","wideView","search","useLocation","token","URLSearchParams","get","email","useState","confirmationSuccessful","setConfirmationSuccessful","useEffect","document","title","axios","put","then","res","catch","err","window","location","pathname","className","style","color","to"],"mappings":"oNAKe,SAASA,EAAaC,GACnC,IAAQC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,SAEVC,EAASC,cAAcD,OACvBE,EAAQ,IAAIC,gBAAgBH,GAAQI,IAAI,SAC5CC,EAAQ,IAAIF,gBAAgBH,GAAQI,IAAI,SAG1C,EAA4DE,mBAAS,MAArE,mBAAOC,EAAP,KAA+BC,EAA/B,KA+BA,OA3BAC,qBAAU,WACRC,SAASC,MAAQ,4BAEjBb,IAEc,OAAVO,GAA4B,OAAVH,EACpBU,IACGC,IAAI,iEAAkE,CACrER,MAAOA,EACPH,MAAOA,IAERY,MAAK,SAACC,GACLL,SAASC,MACP,4DAEFH,GAA0B,MAE3BQ,OAAM,SAACC,GACNT,GAA0B,MAG9BU,OAAOC,SAASC,SAAW,MAI5B,IAGD,kCAC8B,OAA3Bb,EACC,qCACE,oBAAIc,UAAU,mBAAd,SACGd,EACG,gCACA,iBAEN,qBAAKc,UAAU,mBAAmBC,MAAO,CAAEC,MAAO,SAAlD,SACGhB,EACC,+EAEA,2EAGJ,qBACEc,UAAWtB,EAAW,mBAAqB,wBAD7C,SAGGQ,EACC,cAAC,IAAD,CAAkBc,UAAU,kBAAkBG,GAAG,SAAjD,kBAAU,SAIV,cAAC,IAAD,CAAiBH,UAAU,kBAAkBG,GAAG,IAAhD,iBAAU,aAOhB,qBACEH,UAAWtB,EAAW,mBAAqB,wBAC3CuB,MAAO,CAAEC,MAAO,SAFlB,qC","file":"static/js/25.b71c6ca3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./confirm_email.css\";\n\nexport default function ConfirmEmail(props) {\n  const { logOut, wideView } = props;\n  // Sets constants for the 'token' and 'email' URL parameters.\n  const search = useLocation().search;\n  const token = new URLSearchParams(search).get(\"token\"),\n    email = new URLSearchParams(search).get(\"email\");\n\n  // State variable for whether the email was confirmed successfully. Initially set to null while the backend request is made.\n  const [confirmationSuccessful, setConfirmationSuccessful] = useState(null);\n\n  // useEffect hook that runs a single time when this component loads. Sets the title of the web page appropriately and ensures the user is logged out on the UI. A check is then performed on whether the 'email' and 'token' URL parameters are set. If not, the user is returned to the root path.\n  // Otherwise, a PUT request is made to the backend's ConfirmEmail endpoint. If this request is successful, the web page title is updated appropriately and the confirmationSuccessful state variable is set to true. Otherwise, the confirmationSuccessful state variable is set to false.\n  useEffect(() => {\n    document.title = \"Demeter - The plant meter\";\n\n    logOut();\n\n    if (email !== null && token !== null) {\n      axios\n        .put(\"https://smart-plant.azurewebsites.net/api/Account/ConfirmEmail\", {\n          email: email,\n          token: token,\n        })\n        .then((res) => {\n          document.title =\n            \"Email confirmation successful | Demeter - The plant meter\";\n\n          setConfirmationSuccessful(true);\n        })\n        .catch((err) => {\n          setConfirmationSuccessful(false);\n        });\n    } else {\n      window.location.pathname = \"/\";\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <section>\n      {confirmationSuccessful !== null ? (\n        <>\n          <h1 className=\"gold text-center\">\n            {confirmationSuccessful\n              ? \"Email confirmation successful\"\n              : \"Server error\"}\n          </h1>\n          <div className=\"text-center mt-3\" style={{ color: \"white\" }}>\n            {confirmationSuccessful ? (\n              <span>Your email has been confirmed successfully.</span>\n            ) : (\n              <span>Server error. Please try again later.</span>\n            )}\n          </div>\n          <div\n            className={wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"}\n          >\n            {confirmationSuccessful ? (\n              <Link key=\"login\" className=\"btn btn-primary\" to=\"/login\">\n                Login\n              </Link>\n            ) : (\n              <Link key=\"home\" className=\"btn btn-primary\" to=\"/\">\n                Home\n              </Link>\n            )}\n          </div>\n        </>\n      ) : (\n        <div\n          className={wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"}\n          style={{ color: \"white\" }}\n        >\n          Confirming email...\n        </div>\n      )}\n    </section>\n  );\n}\n"],"sourceRoot":""}