{"version":3,"sources":["hooks/register/register.jsx"],"names":["Register","props","logOut","wideView","useState","email","phoneNumber","firstName","lastName","password","confirmPassword","form","setForm","showStatus","setShowStatus","status","setStatus","useEffect","document","title","handleChange","e","input","target","tempForm","_","cloneDeep","name","value","className","onSubmit","preventDefault","registrationData","clientURI","axios","post","then","res","window","location","pathname","catch","err","errors","response","data","errorMessage","undefined","Email","PhoneNumber","FirstName","LastName","Passwords","ConfirmPassword","htmlFor","type","required","onChange","style","color","textAlign","tabIndex","textDecoration","cursor","userSelect","onClick","onKeyPress"],"mappings":"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","file":"static/js/26.652576a4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./register.css\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default function Register(props) {\n  const { logOut, wideView } = props;\n\n  // State variables for the registration form, status of the registration request and whether that status is being shown.\n  const [form, setForm] = useState({\n    email: \"\",\n    phoneNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [showStatus, setShowStatus] = useState(false);\n  const [status, setStatus] = useState(\"-\");\n\n  // useEffect hook that runs a single time when this component loads. Sets the title of the web page appropriately and ensures the user is logged out on the UI.\n  useEffect(() => {\n    document.title = \"Register | Demeter - The plant meter\";\n\n    logOut();\n    // eslint-disable-next-line\n  }, []);\n\n  // Updates the form state variable with the appropriate input field whenever a form input field is updated.\n  const handleChange = (e) => {\n    const input = e.target;\n    const tempForm = _.cloneDeep(form);\n    tempForm[input.name] = input.value;\n\n    setForm(tempForm);\n  };\n\n  // Handles the submit event of the registration form. Sets the request status appropriately, then performs a check on whether the form's 'password' and 'confirmPassword' fields match. If not, an appropriate error message is shown.\n  // Otherwise, a POST request to the backend registration endpoint is made with the form data and the clientURI for the confirmation email to be sent by the backend. If this request is successful, the user is taken to the 'Registration successful' page. Otherwise, an appropriate error message is shown.\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStatus(\"Registering account...\");\n    setShowStatus(true);\n\n    if (form.password !== form.confirmPassword) {\n      setStatus(\"Passwords do not match.\");\n    } else {\n      const registrationData = _.cloneDeep(form);\n      registrationData.clientURI = \"https://www.demeter.onl/confirm-email\";\n\n      axios\n        .post(\n          \"https://smart-plant.azurewebsites.net/api/Account/Register\",\n          registrationData\n        )\n        .then((res) => {\n          window.location.pathname = \"/registration-successful\";\n        })\n        .catch((err) => {\n          const errors = err.response.data.errors;\n          let errorMessage = \"Server error. Please try again later.\";\n\n          if (errors.Email !== undefined) {\n            errorMessage = errors.Email[0];\n          } else if (errors.PhoneNumber !== undefined) {\n            errorMessage = errors.PhoneNumber[0];\n          } else if (errors.FirstName !== undefined) {\n            errorMessage = errors.FirstName[0];\n          } else if (errors.LastName !== undefined) {\n            errorMessage = errors.LastName[0];\n          } else if (errors.Passwords !== undefined) {\n            errorMessage = errors.Passwords[0];\n          } else if (errors.ConfirmPassword !== undefined) {\n            errorMessage = errors.ConfirmPassword[0];\n          }\n\n          setStatus(errorMessage);\n        });\n    }\n  };\n\n  return (\n    <section>\n      <h1 className=\"gold text-center\">Register</h1>\n      <form\n        className={wideView ? \"w-25 m-auto mt-4\" : \"m-auto mt-4 px-2\"}\n        onSubmit={handleSubmit}\n      >\n        <label className=\"form-label gold\" htmlFor=\"email\">\n          Email\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"email\"\n          type=\"text\"\n          required\n          value={form.email}\n          onChange={handleChange}\n        />\n        <label className=\"form-label gold mt-3\" htmlFor=\"phoneNumber\">\n          Phone\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"phoneNumber\"\n          type=\"text\"\n          value={form.phoneNumber}\n          onChange={handleChange}\n        />\n        <label className=\"form-label gold mt-3\" htmlFor=\"firstName\">\n          First name\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"firstName\"\n          type=\"text\"\n          value={form.firstName}\n          onChange={handleChange}\n        />\n        <label className=\"form-label gold mt-3\" htmlFor=\"lastName\">\n          Last name\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"lastName\"\n          type=\"text\"\n          value={form.lastName}\n          onChange={handleChange}\n        />\n        <label className=\"form-label gold mt-3\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"password\"\n          type=\"password\"\n          required\n          value={form.password}\n          onChange={handleChange}\n        />\n        <label className=\"form-label gold mt-3\" htmlFor=\"confirmPassword\">\n          Confirm password\n        </label>\n        <input\n          className=\"form-control\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          required\n          value={form.confirmPassword}\n          onChange={handleChange}\n        />\n        <div\n          className=\"form-text mt-2\"\n          style={{ color: \"white\", textAlign: \"justify\" }}\n        >\n          By clicking Register you agree to our&nbsp;\n          <span\n            className=\"gold light-gold-hover\"\n            tabIndex=\"0\"\n            style={{\n              textDecoration: \"none\",\n              cursor: \"pointer\",\n              userSelect: \"none\",\n            }}\n            onClick={() => {\n              window.location.pathname = \"/terms-of-use\";\n            }}\n            onKeyPress={() => {\n              window.location.pathname = \"/terms-of-use\";\n            }}\n          >\n            terms of use\n          </span>\n          . For more information about our privacy practices, please see\n          our&nbsp;\n          <span\n            className=\"gold light-gold-hover\"\n            tabIndex=\"0\"\n            style={{\n              textDecoration: \"none\",\n              cursor: \"pointer\",\n              userSelect: \"none\",\n            }}\n            onClick={() => {\n              window.location.pathname = \"/privacy-policy\";\n            }}\n            onKeyPress={() => {\n              window.location.pathname = \"/privacy-policy\";\n            }}\n          >\n            privacy policy\n          </span>\n          .\n        </div>\n        {showStatus ? (\n          <div className=\"text-center mt-3\">\n            <span>{status}</span>\n          </div>\n        ) : (\n          <div className=\"hidden-field mt-3\">\n            <span>{status}</span>\n          </div>\n        )}\n        <div\n          className={wideView ? \"text-center mt-3\" : \"text-center mt-3 mb-2\"}\n        >\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Register\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"sourceRoot":""}